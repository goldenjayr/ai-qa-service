"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/services";
exports.ids = ["pages/api/services"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fservices.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fservices.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_services_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/services.ts */ \"(api-node)/./src/pages/api/services.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_services_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_services_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/services\",\n        pathname: \"/api/services\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_services_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGc2VydmljZXMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlMkZwYWdlcyUyRmFwaSUyRnNlcnZpY2VzLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQ3dEO0FBQ3hEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdURBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3NlcnZpY2VzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zZXJ2aWNlc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NlcnZpY2VzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fservices.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/data/mockData.ts":
/*!******************************!*\
  !*** ./src/data/mockData.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initialServicesData: () => (/* binding */ initialServicesData),\n/* harmony export */   reportsData: () => (/* binding */ reportsData),\n/* harmony export */   uxFlowsData: () => (/* binding */ uxFlowsData)\n/* harmony export */ });\nconst initialServicesData = [\n    {\n        id: 1,\n        name: \"Storefront\",\n        service_type: \"storefront\",\n        status: \"Operational\",\n        healthScore: 99.5,\n        aiSummary: \"The main e-commerce site is fully operational. All core user flows are performing within expected parameters.\",\n        avgLatency: 120,\n        errorRate: 0.02,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 99.9\n            },\n            {\n                day: \"Thu\",\n                uptime: 100\n            },\n            {\n                day: \"Fri\",\n                uptime: 100\n            },\n            {\n                day: \"Sat\",\n                uptime: 100\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        latencyHistory: [\n            {\n                hour: \"00:00\",\n                ms: 110\n            },\n            {\n                hour: \"04:00\",\n                ms: 115\n            },\n            {\n                hour: \"08:00\",\n                ms: 130\n            },\n            {\n                hour: \"12:00\",\n                ms: 140\n            },\n            {\n                hour: \"16:00\",\n                ms: 125\n            },\n            {\n                hour: \"20:00\",\n                ms: 118\n            }\n        ],\n        errorRateHistory: [\n            {\n                hour: \"00:00\",\n                rate: 0.01\n            },\n            {\n                hour: \"04:00\",\n                rate: 0.02\n            },\n            {\n                hour: \"08:00\",\n                rate: 0.02\n            },\n            {\n                hour: \"12:00\",\n                rate: 0.03\n            },\n            {\n                hour: \"16:00\",\n                rate: 0.02\n            },\n            {\n                hour: \"20:00\",\n                rate: 0.01\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Passed\",\n                summary: \"All checks passed successfully.\",\n                details: \"- Homepage GET response: 200 OK\\n- Product page load time: 1.2s\\n- Checkout API latency: 150ms\",\n                aiAnalysis: \"The Storefront is healthy. User-facing latency is low and all critical endpoints are responsive. No anomalies detected.\"\n            }\n        ]\n    },\n    {\n        id: 2,\n        name: \"Design Studio\",\n        service_type: \"design-studio\",\n        status: \"Operational\",\n        healthScore: 98.9,\n        aiSummary: \"The 3D product design service is stable. A minor increase in rendering time was observed for complex models, but it remains within SLOs.\",\n        avgLatency: 850,\n        errorRate: 0.5,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 100\n            },\n            {\n                day: \"Thu\",\n                uptime: 99.7\n            },\n            {\n                day: \"Fri\",\n                uptime: 100\n            },\n            {\n                day: \"Sat\",\n                uptime: 100\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Passed\",\n                summary: \"All checks passed successfully.\",\n                details: \"- GET /v2/designs: 200 OK\\n- POST /v2/designs: 201 Created\\n- Texture Generator dependency: Healthy\\n- Mockup Generator dependency: Healthy\",\n                aiAnalysis: \"The Design Studio is performing as expected. Core CRUD operations are functional and dependencies are responsive.\"\n            }\n        ]\n    },\n    {\n        id: 3,\n        name: \"Export Service\",\n        service_type: \"export-service\",\n        status: \"Degraded Performance\",\n        healthScore: 72.1,\n        aiSummary: \"High failure rate for export jobs. The service is struggling to connect to the ERP to validate material SKUs.\",\n        avgLatency: 5500,\n        errorRate: 15.2,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 85.0\n            },\n            {\n                day: \"Thu\",\n                uptime: 82.5\n            },\n            {\n                day: \"Fri\",\n                uptime: 90.1\n            },\n            {\n                day: \"Sat\",\n                uptime: 92.3\n            },\n            {\n                day: \"Sun\",\n                uptime: 95.0\n            }\n        ],\n        latencyHistory: [\n            {\n                hour: \"00:00\",\n                ms: 4500\n            },\n            {\n                hour: \"04:00\",\n                ms: 5000\n            },\n            {\n                hour: \"08:00\",\n                ms: 6000\n            },\n            {\n                hour: \"12:00\",\n                ms: 7000\n            },\n            {\n                hour: \"16:00\",\n                ms: 5500\n            },\n            {\n                hour: \"20:00\",\n                ms: 4800\n            }\n        ],\n        errorRateHistory: [\n            {\n                hour: \"00:00\",\n                rate: 12.1\n            },\n            {\n                hour: \"04:00\",\n                rate: 14.5\n            },\n            {\n                hour: \"08:00\",\n                rate: 18.1\n            },\n            {\n                hour: \"12:00\",\n                rate: 16.8\n            },\n            {\n                hour: \"16:00\",\n                rate: 14.9\n            },\n            {\n                hour: \"20:00\",\n                rate: 13.2\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Failed\",\n                summary: \"ERP connection timeouts are causing export failures.\",\n                details: \"- POST /v1/export: 202 Accepted\\n- ERP Connection Healthcheck: FAILED (Timeout)\\n- PrintLayout dependency: Healthy\",\n                aiAnalysis: \"The primary issue is the connectivity to the ERP. The Export Service itself is running, but its core functionality is impaired by the failing upstream dependency. This is causing a significant backlog of export jobs.\"\n            },\n            {\n                date: \"2025-07-03\",\n                status: \"Warning\",\n                summary: \"Elevated latency on ERP connection.\",\n                details: \"- POST /v1/export: 202 Accepted\\n- ERP Connection Healthcheck: Passed (Latency: 4500ms)\\n- PrintLayout dependency: Healthy\",\n                aiAnalysis: \"Latency to the ERP service increased dramatically yesterday afternoon, likely a precursor to today's timeouts. This suggests the issue is with the ERP service or the network path to it, not the Export Service itself.\"\n            }\n        ],\n        rootCauseAnalysis: {\n            problem: \"15% of export jobs are failing with a 'SKU_VALIDATION_TIMEOUT' error.\",\n            timeline: [\n                \"July 3, 4:00 PM: ERP service deployed a security patch.\",\n                \"July 3, 4:15 PM: Export service error rate began to climb.\",\n                \"July 4, 9:00 AM: Error rate breached the 10% SLO threshold.\"\n            ],\n            probableCause: \"The new ERP security patch appears to have introduced stricter firewall rules. The Export Service's IP address range may no longer be whitelisted, causing connection timeouts when it tries to validate material SKUs.\",\n            recommendation: \"1. **Immediate:** Contact the ERP team to verify firewall and whitelisting rules for the Export Service. 2. **Short-term:** Add more robust retry logic with exponential backoff to the ERP connection client in the Export Service. 3. **Long-term:** Establish a shared, automated integration testing suite between the Export and ERP services that runs before any production deployment.\"\n        }\n    },\n    {\n        id: 4,\n        name: \"Texture Generator\",\n        service_type: \"texture-generator\",\n        status: \"Operational\",\n        healthScore: 99.9,\n        aiSummary: \"Service is operating at peak efficiency. No issues detected.\",\n        avgLatency: 350,\n        errorRate: 0.01,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 100\n            },\n            {\n                day: \"Thu\",\n                uptime: 100\n            },\n            {\n                day: \"Fri\",\n                uptime: 100\n            },\n            {\n                day: \"Sat\",\n                uptime: 100\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Passed\",\n                summary: \"All checks passed successfully.\",\n                details: \"- Image processing queue depth: 2\\n- Average processing time: 300ms\",\n                aiAnalysis: \"The Texture Generator is nominal. Processing queue is low and job completion times are excellent.\"\n            }\n        ]\n    },\n    {\n        id: 5,\n        name: \"Mockup Generator\",\n        service_type: \"mockup-generator\",\n        status: \"Operational\",\n        healthScore: 99.8,\n        aiSummary: \"Service is stable. All systems nominal.\",\n        avgLatency: 400,\n        errorRate: 0.03,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 100\n            },\n            {\n                day: \"Thu\",\n                uptime: 100\n            },\n            {\n                day: \"Fri\",\n                uptime: 100\n            },\n            {\n                day: \"Sat\",\n                uptime: 100\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Passed\",\n                summary: \"All checks passed successfully.\",\n                details: \"- Scene rendering queue depth: 5\\n- Average render time: 380ms\",\n                aiAnalysis: \"The Mockup Generator is healthy and processing jobs efficiently.\"\n            }\n        ]\n    },\n    {\n        id: 6,\n        name: \"ERP\",\n        service_type: \"erp\",\n        status: \"Operational\",\n        healthScore: 99.6,\n        aiSummary: \"ERP system is stable after the recent security patch. Monitoring all dependent services.\",\n        avgLatency: 250,\n        errorRate: 0.1,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 100\n            },\n            {\n                day: \"Thu\",\n                uptime: 99.9\n            },\n            {\n                day: \"Fri\",\n                uptime: 100\n            },\n            {\n                day: \"Sat\",\n                uptime: 100\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Passed\",\n                summary: \"All checks passed successfully.\",\n                details: \"- GET /api/skus: 200 OK\\n- Database connection pool: 95% available\",\n                aiAnalysis: \"The ERP system is stable and responsive. No issues detected following yesterday's security patch.\"\n            }\n        ]\n    },\n    {\n        id: 7,\n        name: \"PrintLayout Generator\",\n        service_type: \"printlayout-generator\",\n        status: \"Operational\",\n        healthScore: 97.5,\n        aiSummary: \"Service is operational, but showing slightly increased processing times due to upstream latency from the Export Service.\",\n        avgLatency: 1200,\n        errorRate: 1.2,\n        uptimeHistory: [\n            {\n                day: \"Mon\",\n                uptime: 100\n            },\n            {\n                day: \"Tue\",\n                uptime: 100\n            },\n            {\n                day: \"Wed\",\n                uptime: 99.5\n            },\n            {\n                day: \"Thu\",\n                uptime: 99.0\n            },\n            {\n                day: \"Fri\",\n                uptime: 99.2\n            },\n            {\n                day: \"Sat\",\n                uptime: 99.8\n            },\n            {\n                day: \"Sun\",\n                uptime: 100\n            }\n        ],\n        dailyChecks: [\n            {\n                date: \"2025-07-04\",\n                status: \"Warning\",\n                summary: \"Processing time has increased by 20%.\",\n                details: \"- PDF generation time: 1100ms\\n- Export Service dependency: Degraded\",\n                aiAnalysis: \"The service itself is functional, but its performance is being negatively impacted by the degraded state of the upstream Export Service. This is a cascading effect.\"\n            }\n        ]\n    }\n];\nconst reportsData = [\n    {\n        id: 'r1',\n        title: \"Q2 2025 Performance & Uptime Report\",\n        date: \"2025-07-01\",\n        type: \"Quarterly Summary\"\n    },\n    {\n        id: 'r2',\n        title: \"Weekly Security Audit - W26\",\n        date: \"2025-06-30\",\n        type: \"Security Scan\"\n    },\n    {\n        id: 'r3',\n        title: \"Auth Service Deep-Dive Analysis\",\n        date: \"2025-06-28\",\n        type: \"Performance Analysis\"\n    }\n];\nconst uxFlowsData = [\n    {\n        id: 'ux1',\n        name: \"Add to Cart & Checkout\",\n        status: \"Needs Improvement\",\n        conversionRate: 4.2,\n        trend: -12,\n        avgTime: \"3m 15s\",\n        aiSummary: \"The checkout flow experiences a significant 65% drop-off on the 'Shipping Details' step. AI analysis indicates user frustration due to slow address validation and multiple rage clicks on the 'Next' button.\",\n        funnel: [\n            {\n                step: \"View Product\",\n                users: 10000\n            },\n            {\n                step: \"Add to Cart\",\n                users: 2500\n            },\n            {\n                step: \"Begin Checkout\",\n                users: 2450\n            },\n            {\n                step: \"Shipping Details\",\n                users: 2200\n            },\n            {\n                step: \"Payment\",\n                users: 770\n            },\n            {\n                step: \"Conversion\",\n                users: 765\n            }\n        ],\n        frictionPoints: [\n            {\n                id: 'fp1',\n                type: \"Rage Click\",\n                severity: \"High\",\n                description: \"Multiple rapid clicks detected on the shipping form 'Next' button.\",\n                element: \"button#next-step\",\n                browser: \"Chrome\",\n                device: \"Desktop\"\n            },\n            {\n                id: 'fp2',\n                type: \"Slow API Call\",\n                severity: \"High\",\n                description: \"The external address validation API is taking over 5 seconds to respond.\",\n                element: \"input#address-line-1\",\n                browser: \"All\",\n                device: \"All\"\n            },\n            {\n                id: 'fp3',\n                type: \"Confusing UI\",\n                severity: \"Medium\",\n                description: \"Users hesitate for an average of 12 seconds on the payment selection screen.\",\n                element: \"div.payment-options\",\n                browser: \"Safari\",\n                device: \"Mobile\"\n            }\n        ],\n        historicalPerformance: [\n            {\n                date: '6/4',\n                rate: 4.8\n            },\n            {\n                date: '6/11',\n                rate: 4.7\n            },\n            {\n                date: '6/18',\n                rate: 4.9\n            },\n            {\n                date: '6/25',\n                rate: 4.3\n            },\n            {\n                date: '7/2',\n                rate: 4.2\n            }\n        ]\n    },\n    {\n        id: 'ux2',\n        name: \"Homepage to Product Discovery\",\n        status: \"Optimal\",\n        conversionRate: 78.5,\n        trend: 3,\n        avgTime: \"0m 45s\",\n        aiSummary: \"This flow is performing well. The new 'Shop the Look' feature has a high engagement rate and is successfully driving users to product pages.\",\n        funnel: [\n            {\n                step: \"Visit Homepage\",\n                users: 10000\n            },\n            {\n                step: \"Use Search Bar\",\n                users: 4500\n            },\n            {\n                step: \"Click Category\",\n                users: 3500\n            },\n            {\n                step: \"View Product Page\",\n                users: 7850\n            }\n        ],\n        frictionPoints: [],\n        historicalPerformance: [\n            {\n                date: '6/4',\n                rate: 75.1\n            },\n            {\n                date: '6/11',\n                rate: 76.3\n            },\n            {\n                date: '6/18',\n                rate: 77.0\n            },\n            {\n                date: '6/25',\n                rate: 78.1\n            },\n            {\n                date: '7/2',\n                rate: 78.5\n            }\n        ]\n    },\n    {\n        id: 'ux3',\n        name: \"Category Filtering & Refinement\",\n        status: \"Needs Improvement\",\n        conversionRate: 45.2,\n        trend: -8,\n        avgTime: \"1m 25s\",\n        aiSummary: \"Users on mobile devices are abandoning sessions after applying more than two filters, suggesting the mobile filter UI is cumbersome.\",\n        funnel: [\n            {\n                step: \"Land on Category Page\",\n                users: 5000\n            },\n            {\n                step: \"Apply First Filter\",\n                users: 3500\n            },\n            {\n                step: \"Apply Second Filter\",\n                users: 2800\n            },\n            {\n                step: \"View Product\",\n                users: 2260\n            }\n        ],\n        frictionPoints: [\n            {\n                id: 'fp5',\n                type: \"High Abandonment\",\n                severity: \"High\",\n                description: \"70% of mobile users leave the page after applying a second filter.\",\n                element: \"div.mobile-filters\",\n                browser: \"All\",\n                device: \"Mobile\"\n            }\n        ],\n        historicalPerformance: [\n            {\n                date: '6/4',\n                rate: 49.0\n            },\n            {\n                date: '6/11',\n                rate: 48.5\n            },\n            {\n                date: '6/18',\n                rate: 47.1\n            },\n            {\n                date: '6/25',\n                rate: 46.3\n            },\n            {\n                date: '7/2',\n                rate: 45.2\n            }\n        ]\n    },\n    {\n        id: 'ux4',\n        name: \"Search to Product View\",\n        status: \"Optimal\",\n        conversionRate: 65.8,\n        trend: 2,\n        avgTime: \"0m 30s\",\n        aiSummary: \"Search performance is strong. Most users find a relevant product within the top 3 results.\",\n        funnel: [\n            {\n                step: \"Initiate Search\",\n                users: 2000\n            },\n            {\n                step: \"View Results Page\",\n                users: 1980\n            },\n            {\n                step: \"Click a Product\",\n                users: 1316\n            }\n        ],\n        frictionPoints: [],\n        historicalPerformance: [\n            {\n                date: '6/4',\n                rate: 64.1\n            },\n            {\n                date: '6/11',\n                rate: 64.5\n            },\n            {\n                date: '6/18',\n                rate: 65.0\n            },\n            {\n                date: '6/25',\n                rate: 65.2\n            },\n            {\n                date: '7/2',\n                rate: 65.8\n            }\n        ]\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/data/mockData.ts\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/services.ts":
/*!***********************************!*\
  !*** ./src/pages/api/services.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _data_mockData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../data/mockData */ \"(api-node)/./src/data/mockData.ts\");\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nasync function handler(req, res) {\n    try {\n        // Fetch all services\n        const services = await prisma.service.findMany();\n        if (!services || services.length === 0) {\n            return res.status(200).json(_data_mockData__WEBPACK_IMPORTED_MODULE_1__.initialServicesData);\n        }\n        // For each service, fetch all related reports (by flow_name)\n        const result = await Promise.all(services.map(async (service)=>{\n            const reports = await prisma.siteHealthReport.findMany({\n                where: {\n                    service_type: service.service_type\n                },\n                orderBy: {\n                    createdAt: 'desc'\n                }\n            });\n            // Convert reports to dailyChecks\n            const dailyChecks = reports.map((report)=>{\n                const sections = [];\n                if (report.positiveHighlights) {\n                    sections.push(`### **Positive Highlights**\\n${report.positiveHighlights}`);\n                }\n                if (report.frictionPoints) {\n                    sections.push(`### **Friction Points**\\n${report.frictionPoints}`);\n                }\n                if (report.recommendations) {\n                    sections.push(`### **Recommendations**\\n${report.recommendations}`);\n                }\n                const detailsMd = sections.join('\\n &nbsp; \\n');\n                return {\n                    date: report.createdAt.toISOString().slice(0, 10),\n                    status: report.status,\n                    summary: report.positiveHighlights || 'No summary',\n                    details: detailsMd,\n                    aiAnalysis: report.aiSummary\n                };\n            });\n            // Latest daily check (if any)\n            const latestCheck = dailyChecks[0] || null;\n            // Use the latest report for other fields, or defaults\n            const latestReport = reports[0];\n            return {\n                id: service.id,\n                name: service.name,\n                service_type: latestReport?.service_type || '',\n                status: latestReport?.status || 'Unknown',\n                healthScore: latestReport?.healthScore || 0,\n                aiSummary: latestReport?.aiSummary || '',\n                avgLatency: latestReport?.avgLatency || 0,\n                errorRate: latestReport?.errorRate || 0,\n                // Build uptimeHistory for the current week (Mon-Sun)\n                uptimeHistory: (()=>{\n                    // Get current date and determine the start of the week (Monday)\n                    const now = new Date();\n                    // Local time is 2025-07-09T16:27:30+08:00 (Wednesday)\n                    // Compute Monday of this week\n                    const dayOfWeek = now.getDay(); // 0 (Sun) - 6 (Sat)\n                    // Map Sunday (0) to 7 for easier math\n                    const offsetToMonday = (dayOfWeek + 6) % 7;\n                    const monday = new Date(now);\n                    monday.setDate(now.getDate() - offsetToMonday);\n                    // Prepare days array\n                    const days = [\n                        \"Mon\",\n                        \"Tue\",\n                        \"Wed\",\n                        \"Thu\",\n                        \"Fri\",\n                        \"Sat\",\n                        \"Sun\"\n                    ];\n                    const reportsByDay = {};\n                    reports.forEach((report)=>{\n                        const reportDate = new Date(report.createdAt);\n                        // Get weekday index (0=Sun, 1=Mon, ..., 6=Sat)\n                        const weekday = reportDate.getDay();\n                        // Map Sunday (0) to 6, Monday (1) to 0, etc.\n                        const mappedIdx = (weekday + 6) % 7;\n                        // Only consider reports within this week\n                        const mondayDate = new Date(monday);\n                        mondayDate.setHours(0, 0, 0, 0);\n                        const sunday = new Date(monday);\n                        sunday.setDate(monday.getDate() + 6);\n                        sunday.setHours(23, 59, 59, 999);\n                        if (reportDate >= mondayDate && reportDate <= sunday) {\n                            // For each day, keep only the latest report\n                            if (!reportsByDay[mappedIdx] || new Date(report.createdAt) > new Date(reportsByDay[mappedIdx].createdAt)) {\n                                reportsByDay[mappedIdx] = report;\n                            }\n                        }\n                    });\n                    // Build uptimeHistory for each day\n                    return days.map((day, idx)=>{\n                        const report = reportsByDay[idx];\n                        return {\n                            day,\n                            uptime: report ? report.healthScore : 0\n                        };\n                    });\n                })(),\n                latencyHistory: (()=>{\n                    // Time slots for the day\n                    const hours = [\n                        \"00:00\",\n                        \"04:00\",\n                        \"08:00\",\n                        \"12:00\",\n                        \"16:00\",\n                        \"20:00\"\n                    ];\n                    // Find latest report for today\n                    const today = new Date();\n                    today.setHours(0, 0, 0, 0);\n                    const latestTodayReport = reports.find((report)=>{\n                        const d = new Date(report.createdAt);\n                        return d.getFullYear() === today.getFullYear() && d.getMonth() === today.getMonth() && d.getDate() === today.getDate();\n                    });\n                    return hours.map((hour)=>({\n                            hour,\n                            ms: latestTodayReport ? latestTodayReport.avgLatency : 0\n                        }));\n                })(),\n                errorRateHistory: (()=>{\n                    const hours = [\n                        \"00:00\",\n                        \"04:00\",\n                        \"08:00\",\n                        \"12:00\",\n                        \"16:00\",\n                        \"20:00\"\n                    ];\n                    const today = new Date();\n                    today.setHours(0, 0, 0, 0);\n                    const latestTodayReport = reports.find((report)=>{\n                        const d = new Date(report.createdAt);\n                        return d.getFullYear() === today.getFullYear() && d.getMonth() === today.getMonth() && d.getDate() === today.getDate();\n                    });\n                    return hours.map((hour)=>({\n                            hour,\n                            rate: latestTodayReport ? latestTodayReport.errorRate : 0\n                        }));\n                })(),\n                dailyChecks,\n                latestDailyCheck: latestCheck,\n                rootCauseAnalysis: undefined\n            };\n        }));\n        return res.status(200).json(result);\n    } catch (error) {\n        console.error('API Error:', error);\n        return res.status(500).json({\n            error: 'Internal server error'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/services.ts\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fservices&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fservices.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();